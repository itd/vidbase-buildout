[buildout]

effective-user = kurt
############################################
# Test Packages
# ----------
# Specify a list of packages that you wish to include in your test suite.
# These packages will have their included tests run when you invoke
# bin/test
#
test-packages =
#    plonetheme.sunburst


############################################
# Debug Mode
# ----------
debug-mode = on
deprecation-warnings = on
verbose-security = off


############################################
# Less Commonly Changed Options
# -----------------------------
# The remainder of the buildout mainly sets up the development
# environment based on the settings above.

# we're extending buildout.cfg
extends =
    buildout.cfg

extensions +=
    mr.developer

eggs +=
    Products.DocFinderTab
    plone.reload
    Products.PDBDebugMode
    ipdb


parts +=
    test
    zopeskel
    omelette
    ipzope


# mr.developer settings:
always-checkout = force
sources = sources
auto-checkout = *


[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']

eggs =
    ${buildout:test-packages}

[ipzope]
# a IPython Shell for interactive use with zope running.
# you also need to copy
# https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs =
        ipython
        ${instance:eggs}
initialization =
        import sys, os
        os.environ["SOFTWARE_HOME"] = "${buildout:directory}/parts/zope2/lib/python"
#        os.environ["SOFTWARE_HOME"] = "${zope2:location}/lib/python"
        os.environ["INSTANCE_HOME"] = "${instance:location}"
        sys.argv[1:1] = "-p zope".split()
#extra-paths = ${zope2:location}/lib/python
extra-paths = ${buildout:directory}/parts/zope2/lib/python
scripts = ipython=ipzope


#[paster]
#recipe = zc.recipe.egg
#eggs =
#   ZopeSkel
#   PasteScript
#   PasteDeploy
#   zopeskel.dexterity
#   collective.autopermission
#   ${buildout:eggs}
#   ${instance:eggs}
#entry-points = paster=paste.script.command:run

